a<- available.packages()
a <- available.packages()
View(a)
head(rownames(a),3)
install.packages("slidfy")
install.packages("ggplot2")
library(ggplot2)
search()
find.package("devtools")
install.pakages("devtools")
install.packages("devtools")
library(devtools)
remove(devtools)
find_rtools
install.packages("devtools")
install.packages("devtools")
find_rtools
library(devtools)
search()
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
devtools::install_github("hadley/devtools")
install_github("hadley/devtools")
library("devtools", lib.loc="~/R/win-library/3.1")
install.packages("devtools")
library(devtools)
build_github_devtools()
install.packages("devtools.zip", repos = NULL)
?devtools
??devtools
unlink("./devtools.zip")
unlink("./devtools.zip")
install.packages(c("slidify","ggplot2","devtools"))
library(ggplot2)
library(devtools)
search()
mtcars
s<-split(mtcars,mtcars$cyl)
?mtcars
s
lapply(s,function(x), colMeans(x[,"hp"]))
lapply(s, colMeans(x[,"hp"]))
lapply(s, colMeans(s[,"hp"]))
install.packages("RMySQL")
library(RMySQL)
url2<- "http://httpbin.org/basic-auth/user/passwd"
pg1 = GET(url2)
library(httr)
pg1 = GET(url2)
pg2 = GET("http://httpbin.org/basic-auth/user/passwd")
library(httr)
time_search <- oauth_app("github","41240fd4afdc03319a3c1a579f284d24aab0bac1")
gtoken <- config(token = de2855f0f7af02c3e6224f3806ae71dfd992538b)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
gtoken <- config(token = de2855f0f7af02c3e6224f3806ae71dfd992538b)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
gtoken <- config(token = de2855f0f7af02c3e6224f3806ae71dfd992538b)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
content(req)
req <- GET("https://api.github.com/users/jtleek/repos")
time_search <- oauth_app("github","41240fd4afdc03319a3c1a579f284d24aab0bac1")
gtoken <- config(token = "de2855f0f7af02c3e6224f3806ae71dfd992538b")
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
gtoken <- config(token = de2855f0f7af02c3e6224f3806ae71dfd992538b)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
oauth_endpoints("github")
oauth_endpoints("github")
time_search <- oauth_app("1263f4cc59798d35ebb6","41240fd4afdc03319a3c1a579f284d24aab0bac1")
github_token <- oauth2.0_token(oauth_endpoints("github"), time_search)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
gtoken <- config(token = de2855f0f7af02c3e6224f3806ae71dfd992538b)
gtoken <- config(token = "de2855f0f7af02c3e6224f3806ae71dfd992538b")
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
gtoken <- "de2855f0f7af02c3e6224f3806ae71dfd992538b"
gtoken = "de2855f0f7af02c3e6224f3806ae71dfd992538b"
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
getwd()
setwd("D:/R/COURSE3_project")
training_set<- read.table()
?read.table()
training_set<- read.table("UCI HAR Dataset/train/X_train.txt")
training_set_labels<- read.table(UCI HAR Dataset/train/y_train.txt)
training_set_labels<- read.table("UCI HAR Dataset/train/y_train.txt")
View(training_set_labels)
View(training_set)
features<- read.table("UCI HAR Dataset/features.txt")
View(features)
test_set<- read.table("UCI HAR Dataset/test/X_test.txt)
test_set<- read.table("UCI HAR Dataset/test/X_test.txt")
View(test_set)
names(training_set_label)
names(training_set_labels)
training_set<- training_set["training_set_labels"]
training_set<- training_set[training_set_labels]
training_set$labels<- training_set_labels
View(training_set)
?ddply
library(dplyr)
?ddply
?ddply()
library(reshape2)
install.packages(reshape2)
install.packages("reshape2")
library(reshape2)
?ddply()
training_set$activity<- function(n) {
for(n == 1) {training_set$activity == 'WALKING'}
}
training_set$activity<- function(n) {
for(n in 1) {training_set$activity == 'WALKING'}
}
?rep
View(training_set)
setwd("D:/R/COURSE3_project")
features     = read.table('./features.txt',header=FALSE)
features     = read.table('features.txt',header=FALSE)
setwd("D:/R/COURSE3_project/UCI HAR Dataset")
features     = read.table('features.txt',header=FALSE)
activityType = read.table('./activity_labels.txt',header=FALSE)
subjectTrain = read.table('./train/subject_train.txt',header=FALSE)
features     = read.table('./features.txt',header=FALSE)
activityType = read.table('./activity_labels.txt',header=FALSE)
subjectTrain = read.table('./train/subject_train.txt',header=FALSE)
xTrain       = read.table('./train/x_train.txt',header=FALSE)
yTrain       = read.table('./train/y_train.txt',header=FALSE)
View(activityType)
View(subjectTrain)
View(features)
colnames(activityType)  = c("activityID","activityType")
colnames(subjectTrain)  = "subjectID"
colnames(xTrain)        = features[,2]
colnames(yTrain)        = "activityID"
View(activityType)
View(features)
View(subjectTrain)
View(yTrain)
View(subjectTrain)
trainingData = cbind(yTrain,subjectTrain,xTrain)
subjectTest = read.table('./test/subject_test.txt',header=FALSE)
features     = read.table('./features.txt',header=FALSE)
activityType = read.table('./activity_labels.txt',header=FALSE)
subjectTrain = read.table('./train/subject_train.txt',header=FALSE)
xTrain       = read.table('./train/x_train.txt',header=FALSE)
yTrain       = read.table('./train/y_train.txt',header=FALSE)
subjectTest = read.table('./test/subject_test.txt',header=FALSE)
xTest       = read.table('./test/x_test.txt',header=FALSE)
yTest       = read.table('./test/y_test.txt',header=FALSE)
colnames(c(xTrain,xTest))= features[,2]
colnames(activityType)  = c("activityID","activityType")
colnames(subjectTrain)  = "subjectID"
colnames(xTrain)        = features[,2]
colnames(yTrain)        = "activityID"
colnames(subjectTest)   = "subjectId"
colnames(xTest)         = features[,2]
colnames(yTest)         = "activityId"
trainingData = cbind(yTrain,subjectTrain,xTrain)
testData = cbind(yTest,subjectTest,xTest)
masterData = rbind(trainingData,testData)
colnames(activityType)  = c("activityID","activityType")
colnames(subjectTrain)  = "subjectID"
colnames(xTrain)        = features[,2]
colnames(yTrain)        = "activityID"
colnames(subjectTest)   = "subjectID"
colnames(xTest)         = features[,2]
colnames(yTest)         = "activityID"
trainingData = cbind(yTrain,subjectTrain,xTrain)
testData = cbind(yTest,subjectTest,xTest)
masterData = rbind(trainingData,testData)
View(xTest)
View(yTest)
library(plyr)
Colmean <- match("mean", names(masterData))
Colstd  <- match("std", names(masterData))
measure_mean_std <- masterData[,Colmean:Colstd]
names(masterData)
?grep
Col_mean_std <- grep(".*mean*|.*std*", features[,2])
measure_mean_std <- masterData[,Col_mean_std]
View(measure_mean_std)
Col_mean_std <- grep("-(mean|std)\\(\\)", features[, 2])
measure_mean_std <- masterData[,Col_mean_std]
View(measure_mean_std)
?grep
Col_mean_std <- grep("-(mean|std)", features[, 2])
subset_mean_std <- masterData[,Col_mean_std]
masterData_measures<- masterData[,Col_mean_std]
names(masterData_measures) <- Col_mean_std, 2]
names(masterData_measures) <- [Col_mean_std, 2]
names(masterData_measures) <- features[Col_mean_std, 2]
View(masterData_measures)
masterData = rbind(trainingData,testData)
head(masterData)
head(masterData, ncol=5)
head(masterData, ncol=1:5)
?head
head(masterData, n=5)
head(masterData, n=5L)
masterData[3,5]
masterData[3,1:5]
Col_mean_std <- grep("-(mean|std)", features[, 2])
names(masterData)
masterData_measures<- filter(masterData, grep("-(mean|std)"))
masterData_measures<- filter(masterData, grepl("-(mean|std)"))
masterData_measures<- filter(masterData, grep("(mean|std)"))
masterData_measures<- filter(masterData, grep("-(mean|std)",masterData))
masterData_measures<- filter(masterData, (grep("-(mean|std)",masterData)))
?filter
masterData_measures<- filter(masterData, (grep("-(mean|std)",colNames)))
grep("-(mean|std)",masterData,colNames)
grep("-(mean|std)",names(masterData))
masterData_measures<- filter(masterData, grep("-(mean|std)",names(masterData)))
masterData_measures<- masterData[,grep("-(mean|std)",names(masterData))]
View(masterData_measures)
names(masterData_measures)
masterData[3,1:5]
masterData_measures[3,1:5]
masterData[3,1:5]
View(activityType)
masterData = cbind(masterData$activityID,masterData_measures)
View(masterData)
View(activityType)
names(masterData)[1] <- activityID
names(masterData)[1] <- "activityID"
View(masterData)
masterData = merge(masterData,activityType,by='activityId',all.x=TRUE)
View(activityType)
?merge
masterData = merge(masterData,activityType,by='activityId')
masterData = merge(masterData,activityType,by="activityId")
masterData = merge(masterData,activityType,by.x="activityId")
masterData = merge(masterData,activityType,by="activityID",all.x=TRUE)
View(masterData)
